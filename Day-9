https://leetcode.com/explore/featured/card/july-leetcoding-challenge/545/week-2-july-8th-july-14th/3385/
Code:

class Solution {
public:
    int helper(TreeNode* root){
        if(root==NULL) return 0;
        
        queue<pair<TreeNode*,int>> q;
        int ans=1,offset,y,a,b;
        q.push({root,0});
        while(!q.empty()){
            y=q.size();
            offset=q.front().second;
            for(int i=0;i<y;i++){
                    pair<TreeNode*,int> temp=q.front();
                    q.pop();
                    if(i==0)
                        a=temp.second;
                    if(i==y-1)
                        b=temp.second;
                if(temp.first->left)
                    q.push({temp.first->left,(temp.second-offset)*2});
                 if(temp.first->right)
                    q.push({temp.first->right,(temp.second-offset)*2+1});
            }
            ans=max(ans,b-a+1);
        }
        return ans;
    }
    
    int widthOfBinaryTree(TreeNode* root) {
        ios_base::sync_with_stdio(false);
        cin.tie(0);
        return helper(root);   
    }
};
