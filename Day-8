https://leetcode.com/explore/featured/card/july-leetcoding-challenge/545/week-2-july-8th-july-14th/3384/
Code:

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ans;
        sort(nums.begin(),nums.end());
        int n=nums.size(),j,k;
         for(int i=0;i<n-2;i++){
             if(nums[i]>0) return ans;
             if(i>0 && nums[i-1] == nums[i])
                continue;
                j=i+1;k=n-1;
              while(j<k){
                  int sum=nums[i]+nums[j]+nums[k];
                  
                  if(sum==0 ){
                      ans.push_back({nums[i],nums[j],nums[k]});
                      while(j<k && nums[j]==nums[j+1]) j++;
                      while(j<k && nums[k]==nums[k-1]) k--;
                      
                      j++;
                      k--;
                  }
                  else if(sum>0)
                      k--;
                  else
                      j++;
              }
            
          }
        return ans;
    }
};
