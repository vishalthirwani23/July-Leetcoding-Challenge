https://leetcode.com/explore/challenge/card/july-leetcoding-challenge/546/week-3-july-15th-july-21st/3397/
Code:

class Solution {
    
public:
    bool dfs(int x, int y,int m,int n,vector<vector<char>>& board,const char* word){
       
        if(board[x][y]!=word[0]) return false;
        if(word[1]=='\0')   return true;
        board[x][y]='*';
        bool res=false;
        if(x+1<m)          res = dfs(x+1,y,m,n,board,word+1);
        if(!res && x-1>=0) res = dfs(x-1,y,m,n,board,word+1);
        if(!res && y+1<n)  res = dfs(x,y+1,m,n,board,word+1);
        if(!res && y-1>=0) res = dfs(x,y-1,m,n,board,word+1);
          
        board[x][y]=word[0];
                
        return res;
    }
    bool exist(vector<vector<char>>& board, string word) {
        int m=board.size(),n=board[0].size();
       if(word.length()>m*n) return false;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(  dfs(i,j,m,n,board,word.c_str()) )
                 return true;
                    
            }
        } 
        return false;
    }
    
};
       
