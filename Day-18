https://leetcode.com/problems/course-schedule-ii/
Code:

class Solution {
public:
    vector<int> findOrder(int n, vector<vector<int>>& p) {
        vector<int> outdegree(n,0),ans;
        queue<int> q;
        pair<int,vector<int>> adj[n];
        for(int i=0;i<p.size();i++){
            outdegree[p[i][0]]++;
            adj[p[i][1]].second.push_back(p[i][0]);
        }
        for(int i=0;i<n;i++){
            if(outdegree[i]==0)
                q.push(i);
        }
        while(q.empty()==false){
            int x=q.front();
            q.pop();
            ans.push_back(x);
            for(int i=0;i<adj[x].second.size();i++){
             outdegree[adj[x].second[i]]--;
                if(outdegree[adj[x].second[i]]==0)
                    q.push(adj[x].second[i]);
            } 
        }
        return ans;
    }
};
