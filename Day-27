https://leetcode.com/explore/challenge/card/july-leetcoding-challenge/547/week-4-july-22nd-july-28th/3403/
Code:

class Solution {
public:
     int search(vector<int>& inorder,int val,int l,int r){
        for(int j=l;j<=r;j++){
            if(inorder[j]==val)
                return j;
        }
        return -1;
    }
        TreeNode*  buildTreeUtil(vector<int>& postorder, vector<int>& inorder,int l,int r,int& k){
        if(l>r)
            return NULL;
        if(k<0)
            return NULL;
        TreeNode *root= new TreeNode(postorder[k]);
        int m=search(inorder,postorder[k],l,r);
        k--;
        root->right=  buildTreeUtil(postorder,inorder,m+1,r,k);    
        root->left=   buildTreeUtil(postorder,inorder,l,m-1,k);
        
        return root;
        
    }
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
         if(postorder.empty())
            return NULL;
        int k=postorder.size()-1;
        return buildTreeUtil(postorder,inorder,0,inorder.size()-1,k);
    }
};
