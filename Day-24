https://leetcode.com/explore/challenge/card/july-leetcoding-challenge/547/week-4-july-22nd-july-28th/3400/
Code:

class Solution {
public:
    void dfs(vector<vector<int>>& graph,vector<int> temp,vector<vector<int>>& ans, int node, int target ){
        temp.push_back(node);
        if(node==target){
            ans.push_back(temp);
            return ;
        }
         for(int x:graph[node]){
            
            dfs(graph, temp, ans, x, target);
            
        }
    }
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        int n=graph.size();
        vector<vector<int>> ans;
        vector<int> temp;
            temp.push_back(0);
        for(int node:graph[0]){
            
            dfs(graph, temp, ans, node, n-1);
            
        }
        return ans;
    }
};
